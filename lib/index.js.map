{"version":3,"sources":["../src/index.js"],"names":["fs","require","program","uploadToGist","console","info","load","config","readOneTabData","oneTabData","upload","res","html_url","error","downloadFromGist","download","data","metadata","backup","restoreOneTabData","syncWithGist","detectDownloadOrUpload","restoreFromFile","file","content","readFileSync","toString","db","get","result","close","reject","Error","message","put","then","lastsync","catch","pkginfo","JSON","parse","__dirname","version","description","command","action","undefined","noHelp","help","process","argv","args","length"],"mappings":"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","file":"index.js","sourcesContent":["const fs = require(\"fs\");\n\nconst program = require(\"commander\");\n\nimport gist from \"./gist\";\nimport openOneTabDB from \"./db\";\nimport conf from \"./conf\";\n\nconst uploadToGist = async () => {\n    console.info(\"uploading data to gist ...\");\n    try {\n        let config = await conf.load([\"chrome_profile_path\", \"onetab_ext_id\", \"gist_token\"]);\n        let oneTabData = await readOneTabData(config);\n        let res = await gist.upload(config, oneTabData);\n        console.info(\"success. \" + res.html_url);\n        return res;\n    } catch(e) {\n        console.error(e);\n    }\n};\n\nconst downloadFromGist = async () => {\n    console.info(\"downloading data from gist ...\");\n    try {\n        let config = await conf.load([\"chrome_profile_path\", \"onetab_ext_id\", \"gist_token\", \"gist_id\"]);\n        let [data, metadata] = await gist.download(config);\n        let oneTabData = await readOneTabData(config);\n        let res = await gist.backup(config, oneTabData);\n        await restoreOneTabData(config, data);\n        console.info(\"success.\");\n        return res;\n    } catch (e) {\n        console.error(e);\n    }\n};\n\nconst syncWithGist = async () => {\n    try {\n        let config = await conf.load([\"chrome_profile_path\", \"onetab_ext_id\", \"gist_token\"]);\n        return await detectDownloadOrUpload(config);\n    } catch (e) {\n        console.error(e);\n    }\n};\n\nconst restoreFromFile = async (file) => {\n    try {\n        let config = await conf.load([\"chrome_profile_path\", \"onetab_ext_id\"]);\n        let content = fs.readFileSync(file).toString();\n        let res = await restoreOneTabData(config, content)\n        console.info(\"success.\");\n        return res;\n    } catch (e) {\n        console.error(e);\n    }\n}\n\nconst readOneTabData = async (config) => {\n    try {\n        let db = await openOneTabDB(config);\n        let result = await db.get();\n        await db.close();\n        return result;\n    } catch (e) {\n        return Promise.reject(\n            new Error(\"can't open chrome localstorage db. If your browser is running, please quit it.\" + e.message)\n        );\n    }\n};\n\n\nconst restoreOneTabData = async (config, data) => {\n    try {\n        let db = await openOneTabDB(config);\n        let result = await db.put(data);\n        await db.close();\n        return result;\n    } catch (e) {\n        return Promise.reject(\n            new Error(\"can't open chrome localstorage db. If your browser is running, please quit it.\" + e.message)\n        );\n    }\n};\n\nconst detectDownloadOrUpload = (config) => {\n    gist.download(config).then(([data, metadata]) => {\n        if (config.lastsync === metadata.lastsync) {\n            return uploadToGist();\n        } else {\n            return downloadFromGist();\n        }\n    }).catch(res => res.message === \"Not Found\" ? uploadToGist() : console.error(res));\n};\n\n\nconst pkginfo = JSON.parse(fs.readFileSync(__dirname + \"/../package.json\"));\nprogram\n    .version(pkginfo.version)\n    .description(pkginfo.description);\n\nprogram\n    .command(\"upload\")\n    .description(\"force upload onetab data to gist\")\n    .action(uploadToGist);\n\nprogram\n    .command(\"download\")\n    .description(\"force download onetab data from gist\")\n    .action(downloadFromGist);\n\nprogram\n    .command(\"sync\")\n    .description(\"sync onetab data with gist\")\n    .action(syncWithGist);\n\nprogram\n    .command(\"restore <file>\")\n    .description(\"restore onetab data from backup file\")\n    .action(restoreFromFile);\n\nprogram\n    .command(\"*\", undefined, {noHelp: true})\n    .action(() => program.help());\n\nprogram.parse(process.argv);\nif (!program.args.length) program.help();\n\n"]}